# Generated using halfpipe cli version 0.0.0-DEV
name: pipeline-name
"on":
  push:
    branches:
    - main
  workflow_dispatch: {}
env:
  ARTIFACTORY_PASSWORD: ${{ secrets.EE_ARTIFACTORY_PASSWORD }}
  ARTIFACTORY_URL: ${{ secrets.EE_ARTIFACTORY_URL }}
  ARTIFACTORY_USERNAME: ${{ secrets.EE_ARTIFACTORY_USERNAME }}
  BUILD_VERSION: 2.${{ github.run_number }}.0
  GIT_REVISION: ${{ github.sha }}
  RUNNING_IN_CI: "true"
  VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
  VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
defaults:
  run:
    working-directory: e2e/actions/deploy-ml
concurrency: ${{ github.workflow }}
jobs:
  create_zip_for_ml_task:
    name: create zip for ml task
    runs-on: ee-runner
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: recursive
        ssh-key: ${{ secrets.EE_GITHUB_PRIVATE_KEY }}
    - name: create zip for ml task
      uses: docker://alpine
      with:
        entrypoint: /bin/sh
        args: -c "cd e2e/actions/deploy-ml; \package.sh"
    - name: Package artifacts
      run: tar -cvf /tmp/halfpipe-artifacts.tar e2e/target/xquery.zip
      working-directory: ${{ github.workspace }}
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: /tmp/halfpipe-artifacts.tar
  deploy-ml-zip:
    name: deploy-ml-zip
    needs:
    - create_zip_for_ml_task
    runs-on: ee-runner
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: recursive
        ssh-key: ${{ secrets.EE_GITHUB_PRIVATE_KEY }}
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: artifacts
    - name: Extract artifacts
      run: tar -xvf halfpipe-artifacts.tar; rm halfpipe-artifacts.tar
      working-directory: ${{ github.workspace }}
    - name: deploy-ml-zip
      uses: docker://eu.gcr.io/halfpipe-io/halfpipe-ml-deploy
      with:
        entrypoint: /bin/sh
        args: -c "cd e2e/actions/deploy-ml; /ml-deploy/deploy-local-zip"
      env:
        APP_NAME: pipeline-name
        DEPLOY_ZIP: ../../target/xquery.zip
        MARKLOGIC_HOST: ml.dev.com
        MARKLOGIC_PASSWORD: ""
        MARKLOGIC_USERNAME: ""
        USE_BUILD_VERSION: "true"
  deploy_ml-modules_artifact:
    name: Deploy ml-modules artifact
    needs:
    - deploy-ml-zip
    runs-on: ee-runner
    timeout-minutes: 60
    steps:
    - name: Vault secrets
      id: secrets
      uses: hashicorp/vault-action@v2.2.0
      with:
        url: https://vault.halfpipe.io
        method: approle
        roleId: ${{ env.VAULT_ROLE_ID }}
        secretId: ${{ env.VAULT_SECRET_ID }}
        exportEnv: false
        secrets: |
          /springernature/data/shared/artifactory password | springernature_data_shared_artifactory_password ;
          /springernature/data/shared/artifactory username | springernature_data_shared_artifactory_username ;
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: recursive
        ssh-key: ${{ secrets.EE_GITHUB_PRIVATE_KEY }}
    - name: Deploy ml-modules artifact
      uses: docker://eu.gcr.io/halfpipe-io/halfpipe-ml-deploy
      with:
        entrypoint: /bin/sh
        args: -c "cd e2e/actions/deploy-ml; /ml-deploy/deploy-ml-modules"
      env:
        APP_NAME: my-app
        APP_VERSION: v1
        ARTIFACTORY_PASSWORD: ${{ steps.secrets.outputs.springernature_data_shared_artifactory_password }}
        ARTIFACTORY_USERNAME: ${{ steps.secrets.outputs.springernature_data_shared_artifactory_username }}
        MARKLOGIC_HOST: ml.dev.com,ml.qa.com
        MARKLOGIC_PASSWORD: ""
        MARKLOGIC_USERNAME: foo
        ML_MODULES_VERSION: "2.1425"
        USE_BUILD_VERSION: "false"
