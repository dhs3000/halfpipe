# Generated using halfpipe cli version 0.0.0-DEV
name: pipeline-name
"on":
  push:
    branches:
    - master
  workflow_dispatch: {}
env:
  ARTIFACTORY_PASSWORD: ${{ secrets.EE_ARTIFACTORY_PASSWORD }}
  ARTIFACTORY_URL: ${{ secrets.EE_ARTIFACTORY_URL }}
  ARTIFACTORY_USERNAME: ${{ secrets.EE_ARTIFACTORY_USERNAME }}
  BUILD_VERSION: ${{ github.run_number }}
  GCR_PRIVATE_KEY: ${{ secrets.EE_GCR_PRIVATE_KEY }}
  GIT_REVISION: ${{ github.sha }}
  RUNNING_IN_CI: "true"
defaults:
  run:
    working-directory: e2e/actions/deploy-ml
jobs:
  create_zip_for_ml_task:
    name: create zip for ml task
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: run
      uses: docker://alpine
      with:
        entrypoint: /bin/sh
        args: -c "\package.sh"
    - name: Save artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: |
          e2e/actions/deploy-ml/target/xquery.zip
  deploy-ml-zip:
    name: deploy-ml-zip
    needs:
    - create_zip_for_ml_task
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - name: Vault secrets
      id: secrets
      uses: hashicorp/vault-action@v2.1.1
      with:
        url: https://vault.halfpipe.io
        method: approle
        roleId: ${{ secrets.VAULT_ROLE_ID }}
        secretId: ${{ secrets.VAULT_SECRET_ID }}
        exportEnv: false
        secrets: |
          springernature/halfpipe-team/halfpipe-gcr private_key | halfpipe-gcr_private_key ;
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Restore artifacts
      uses: actions/download-artifact@v2
      with:
        name: artifacts
        path: |
          e2e/actions/deploy-ml/target/xquery.zip
    - name: Login to Docker Registry
      uses: docker/login-action@v1
      with:
        username: _json_key
        password: ${{ steps.secrets.outputs.halfpipe-gcr_private_key }}
        registry: eu.gcr.io
    - name: run
      uses: docker://eu.gcr.io/halfpipe-io/halfpipe-ml-deploy
      with:
        entrypoint: /bin/sh
        args: -c "/ml-deploy/deploy-local-zip"
    env:
      APP_NAME: pipeline-name
      DEPLOY_ZIP: target/xquery.zip
      MARKLOGIC_HOST: ml.dev.com
      MARKLOGIC_PASSWORD: ""
      MARKLOGIC_USERNAME: ""
      USE_BUILD_VERSION: "true"
  deploy_ml-modules_artifact:
    name: Deploy ml-modules artifact
    needs:
    - deploy-ml-zip
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
    - name: Vault secrets
      id: secrets
      uses: hashicorp/vault-action@v2.1.1
      with:
        url: https://vault.halfpipe.io
        method: approle
        roleId: ${{ secrets.VAULT_ROLE_ID }}
        secretId: ${{ secrets.VAULT_SECRET_ID }}
        exportEnv: false
        secrets: |
          springernature/halfpipe-team/artifactory password | artifactory_password ;
          springernature/halfpipe-team/artifactory username | artifactory_username ;
          springernature/halfpipe-team/halfpipe-gcr private_key | halfpipe-gcr_private_key ;
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Login to Docker Registry
      uses: docker/login-action@v1
      with:
        username: _json_key
        password: ${{ steps.secrets.outputs.halfpipe-gcr_private_key }}
        registry: eu.gcr.io
    - name: run
      uses: docker://eu.gcr.io/halfpipe-io/halfpipe-ml-deploy
      with:
        entrypoint: /bin/sh
        args: -c "/ml-deploy/deploy-ml-modules"
    env:
      APP_NAME: my-app
      APP_VERSION: v1
      ARTIFACTORY_PASSWORD: ${{ steps.secrets.outputs.artifactory_password }}
      ARTIFACTORY_USERNAME: ${{ steps.secrets.outputs.artifactory_username }}
      MARKLOGIC_HOST: ml.dev.com,ml.qa.com
      MARKLOGIC_PASSWORD: ""
      MARKLOGIC_USERNAME: foo
      ML_MODULES_VERSION: "2.1425"
      USE_BUILD_VERSION: "false"

