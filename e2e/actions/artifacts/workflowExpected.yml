# Generated using halfpipe cli version 0.0.0-DEV
name: artifacts
"on":
  push:
    branches:
    - master
  workflow_dispatch: {}
env:
  ARTIFACTORY_PASSWORD: ${{ secrets.EE_ARTIFACTORY_PASSWORD }}
  ARTIFACTORY_URL: ${{ secrets.EE_ARTIFACTORY_URL }}
  ARTIFACTORY_USERNAME: ${{ secrets.EE_ARTIFACTORY_USERNAME }}
  BUILD_VERSION: ${{ github.run_number }}
  GCR_PRIVATE_KEY: ${{ secrets.EE_GCR_PRIVATE_KEY }}
  GIT_REVISION: ${{ github.sha }}
  RUNNING_IN_CI: "true"
defaults:
  run:
    working-directory: e2e/actions/artifacts
jobs:
  build:
    name: build
    runs-on: ubuntu-20.04
    container:
      image: debian:buster-slim
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: run
      run: \mkdir target; echo foo > foo.txt; echo bar > target/bar.txt
    - name: Save artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: |
          e2e/actions/artifacts/foo.txt
          e2e/actions/artifacts/target/bar.txt
    - name: Save artifacts (failure)
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: |
          e2e/actions/artifacts/foo.txt
  test:
    name: test
    needs:
    - build
    runs-on: ubuntu-20.04
    container:
      image: debian:buster-slim
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Restore artifacts
      uses: actions/download-artifact@v2
      with:
        name: artifacts
        path: |
          e2e/actions/artifacts/foo.txt
          e2e/actions/artifacts/target/bar.txt
    - name: run
      run: \cat foo.txt target/bar.txt

