# Generated using halfpipe cli version 0.0.0-DEV
name: artifacts
"on":
  push:
    branches:
    - master
  workflow_dispatch: {}
env:
  ARTIFACTORY_PASSWORD: ${{ secrets.EE_ARTIFACTORY_PASSWORD }}
  ARTIFACTORY_URL: ${{ secrets.EE_ARTIFACTORY_URL }}
  ARTIFACTORY_USERNAME: ${{ secrets.EE_ARTIFACTORY_USERNAME }}
  BUILD_VERSION: ${{ github.run_number }}
  GCR_PRIVATE_KEY: ${{ secrets.EE_GCR_PRIVATE_KEY }}
  GIT_REVISION: ${{ github.sha }}
  RUNNING_IN_CI: "true"
  VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
  VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
defaults:
  run:
    working-directory: e2e/actions/artifacts
jobs:
  build:
    name: build
    runs-on: self-hosted
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: run
      uses: docker://debian:buster-slim
      with:
        entrypoint: /bin/sh
        args: -c "\mkdir target; echo foo > foo.txt; echo bar > target/bar.txt"
    - name: Package artifacts
      run: tar -cvf /tmp/halfpipe-artifacts.tar foo.txt target/bar.txt
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: /tmp/halfpipe-artifacts.tar
    - name: Package artifacts-failure
      if: failure()
      run: tar -cvf /tmp/halfpipe-artifacts.tar foo.txt
    - name: Upload artifacts-failure
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: artifacts-failure
        path: /tmp/halfpipe-artifacts.tar
  test:
    name: test
    needs:
    - build
    runs-on: self-hosted
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: artifacts
        path: e2e/actions/artifacts
    - name: Extract artifacts
      run: tar -xvf halfpipe-artifacts.tar; rm halfpipe-artifacts.tar
    - name: run
      uses: docker://debian:buster-slim
      with:
        entrypoint: /bin/sh
        args: -c "\cat foo.txt target/bar.txt"

