# Generated using halfpipe cli version 0.0.0-DEV
name: pipeline-name
"on":
  push:
    branches:
    - master
  workflow_dispatch: {}
env:
  ARTIFACTORY_PASSWORD: ${{ secrets.EE_ARTIFACTORY_PASSWORD }}
  ARTIFACTORY_URL: ${{ secrets.EE_ARTIFACTORY_URL }}
  ARTIFACTORY_USERNAME: ${{ secrets.EE_ARTIFACTORY_USERNAME }}
  BUILD_VERSION: ${{ github.run_number }}
  GCR_PRIVATE_KEY: ${{ secrets.EE_GCR_PRIVATE_KEY }}
  GIT_REVISION: ${{ github.sha }}
  RUNNING_IN_CI: "true"
defaults:
  run:
    working-directory: e2e/actions/notifications
jobs:
  my_run_task:
    name: my run task
    runs-on: self-hosted
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: run
      uses: docker://foo
      with:
        entrypoint: /bin/sh
        args: -c "\foo"
    - name: 'Notify slack #failure1 (failure)'
      if: failure()
      uses: yukin01/slack-bot-action@v0.0.4
      with:
        status: ${{ job.status }}
        oauth_token: ${{ secrets.EE_SLACK_TOKEN }}
        channel: '#failure1'
        text: failure message
    - name: 'Notify slack #success1 (success)'
      uses: yukin01/slack-bot-action@v0.0.4
      with:
        status: ${{ job.status }}
        oauth_token: ${{ secrets.EE_SLACK_TOKEN }}
        channel: '#success1'
        text: success message
    - name: 'Notify slack #success2 (success)'
      uses: yukin01/slack-bot-action@v0.0.4
      with:
        status: ${{ job.status }}
        oauth_token: ${{ secrets.EE_SLACK_TOKEN }}
        channel: '#success2'
        text: success message

