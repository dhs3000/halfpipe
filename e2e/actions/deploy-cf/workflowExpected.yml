# Generated using halfpipe cli version 0.0.0-DEV
name: pipeline-name
"on":
  push:
    branches:
    - master
    paths:
    - e2e/actions/deploy-cf**
  workflow_dispatch: {}
env:
  ARTIFACTORY_PASSWORD: ${{ secrets.EE_ARTIFACTORY_PASSWORD }}
  ARTIFACTORY_URL: ${{ secrets.EE_ARTIFACTORY_URL }}
  ARTIFACTORY_USERNAME: ${{ secrets.EE_ARTIFACTORY_USERNAME }}
  BUILD_VERSION: ${{ github.run_number }}
  GCR_PRIVATE_KEY: ${{ secrets.EE_GCR_PRIVATE_KEY }}
  GIT_REVISION: ${{ github.sha }}
  RUNNING_IN_CI: "true"
  VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
  VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
defaults:
  run:
    working-directory: e2e/actions/deploy-cf
jobs:
  make_binary:
    name: make binary
    runs-on: self-hosted
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: run
      uses: docker://ubuntu
      with:
        entrypoint: /bin/sh
        args: -c "\echo foo > foo.html"
    - name: Package artifacts
      run: tar -cvf /tmp/halfpipe-artifacts.tar foo.html
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: /tmp/halfpipe-artifacts.tar
  deploy_to_cf:
    name: deploy to cf
    needs:
    - make_binary
    runs-on: self-hosted
    timeout-minutes: 60
    steps:
    - name: Vault secrets
      id: secrets
      uses: hashicorp/vault-action@v2.1.1
      with:
        url: https://vault.halfpipe.io
        method: approle
        roleId: ${{ env.VAULT_ROLE_ID }}
        secretId: ${{ env.VAULT_SECRET_ID }}
        exportEnv: false
        secrets: |
          springernature/halfpipe-team/another secret | another_secret ;
          springernature/halfpipe-team/cloudfoundry api-snpaas | cloudfoundry_api-snpaas ;
          springernature/halfpipe-team/cloudfoundry org-snpaas | cloudfoundry_org-snpaas ;
          springernature/halfpipe-team/cloudfoundry password-snpaas | cloudfoundry_password-snpaas ;
          springernature/halfpipe-team/cloudfoundry username-snpaas | cloudfoundry_username-snpaas ;
          springernature/halfpipe-team/secret value | secret_value ;
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: artifacts
        path: e2e/actions/deploy-cf
    - name: Extract artifacts
      run: tar -xvf halfpipe-artifacts.tar; rm halfpipe-artifacts.tar
    - name: Login to GCR
      uses: docker/login-action@v1
      with:
        registry: eu.gcr.io
        username: _json_key
        password: ${{ secrets.EE_GCR_PRIVATE_KEY }}
    - name: Deploy
      uses: docker://simonjohansson/action-test:latest
      with:
        api: ${{ steps.secrets.outputs.cloudfoundry_api-snpaas }}
        org: ${{ steps.secrets.outputs.cloudfoundry_org-snpaas }}
        space: dev
        username: ${{ steps.secrets.outputs.cloudfoundry_username-snpaas }}
        password: ${{ steps.secrets.outputs.cloudfoundry_password-snpaas }}
        manifestPath: e2e/actions/deploy-cf/manifest.yml
        cli_version: cf7
        command: halfpipe-all
        testDomain: springernature.app
        appPath: e2e/actions/deploy-cf/foo.html
      env:
        CF_ENV_VAR_ENV1: "1234"
        CF_ENV_VAR_ENV2: ${{ steps.secrets.outputs.secret_value }}
        CF_ENV_VAR_ENV3: '{"a": "b", "c": "d"}'
        CF_ENV_VAR_ENV4: ${{ steps.secrets.outputs.another_secret }}
    - name: Cleanup
      if: always()
      uses: docker://simonjohansson/action-test:latest
      with:
        api: ${{ steps.secrets.outputs.cloudfoundry_api-snpaas }}
        org: ${{ steps.secrets.outputs.cloudfoundry_org-snpaas }}
        space: dev
        username: ${{ steps.secrets.outputs.cloudfoundry_username-snpaas }}
        password: ${{ steps.secrets.outputs.cloudfoundry_password-snpaas }}
        manifestPath: e2e/actions/deploy-cf/manifest.yml
        cli_version: cf7
        command: halfpipe-cleanup

