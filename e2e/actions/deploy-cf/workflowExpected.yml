# Generated using halfpipe cli version 0.0.0-DEV
name: pipeline-name
"on":
  push:
    branches:
    - main
    paths:
    - e2e/actions/deploy-cf**
    - .github/workflows/pipeline-name.yml
  workflow_dispatch: {}
env:
  ARTIFACTORY_PASSWORD: ${{ secrets.EE_ARTIFACTORY_PASSWORD }}
  ARTIFACTORY_URL: ${{ secrets.EE_ARTIFACTORY_URL }}
  ARTIFACTORY_USERNAME: ${{ secrets.EE_ARTIFACTORY_USERNAME }}
  BUILD_VERSION: 2.${{ github.run_number }}.0
  GIT_REVISION: ${{ github.sha }}
  RUNNING_IN_CI: "true"
  VAULT_ROLE_ID: ${{ secrets.VAULT_ROLE_ID }}
  VAULT_SECRET_ID: ${{ secrets.VAULT_SECRET_ID }}
defaults:
  run:
    working-directory: e2e/actions/deploy-cf
concurrency: ${{ github.workflow }}
jobs:
  make_binary:
    name: make binary
    runs-on: ee-runner
    timeout-minutes: 60
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        ssh-key: ${{ secrets.EE_GITHUB_PRIVATE_KEY }}
    - name: make binary
      uses: docker://ubuntu
      with:
        entrypoint: /bin/sh
        args: -c "cd e2e/actions/deploy-cf; \echo foo > foo.html"
    - name: Package artifacts
      run: tar -cvf /tmp/halfpipe-artifacts.tar e2e/actions/deploy-cf/foo.html
      working-directory: ${{ github.workspace }}
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: /tmp/halfpipe-artifacts.tar
  deploy_to_cf:
    name: deploy to cf
    needs:
    - make_binary
    runs-on: ee-runner
    timeout-minutes: 60
    steps:
    - name: Vault secrets
      id: secrets
      uses: hashicorp/vault-action@v2.4.1
      with:
        url: https://vault.halfpipe.io
        method: approle
        roleId: ${{ env.VAULT_ROLE_ID }}
        secretId: ${{ env.VAULT_SECRET_ID }}
        exportEnv: false
        secrets: |
          /springernature/data/halfpipe-team/another secret | springernature_data_halfpipe-team_another_secret ;
          /springernature/data/halfpipe-team/cloudfoundry api-snpaas | springernature_data_halfpipe-team_cloudfoundry_api-snpaas ;
          /springernature/data/halfpipe-team/cloudfoundry org-snpaas | springernature_data_halfpipe-team_cloudfoundry_org-snpaas ;
          /springernature/data/halfpipe-team/cloudfoundry password-snpaas | springernature_data_halfpipe-team_cloudfoundry_password-snpaas ;
          /springernature/data/halfpipe-team/cloudfoundry username-snpaas | springernature_data_halfpipe-team_cloudfoundry_username-snpaas ;
          /springernature/data/halfpipe-team/secret something | springernature_data_halfpipe-team_secret_something ;
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        ssh-key: ${{ secrets.EE_GITHUB_PRIVATE_KEY }}
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: artifacts
    - name: Extract artifacts
      run: tar -xvf halfpipe-artifacts.tar; rm halfpipe-artifacts.tar
      working-directory: ${{ github.workspace }}
    - name: Push
      uses: docker://eu.gcr.io/halfpipe-io/cf-resource-v2:stable
      with:
        api: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_api-snpaas }}
        org: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_org-snpaas }}
        space: dev
        username: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_username-snpaas }}
        password: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_password-snpaas }}
        cli_version: cf7
        manifestPath: e2e/actions/deploy-cf/manifest.yml
        testDomain: springernature.app
        appPath: e2e/actions/deploy-cf/foo.html
        command: halfpipe-push
      env:
        CF_ENV_VAR_BUILD_URL: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
        CF_ENV_VAR_ENV1: "1234"
        CF_ENV_VAR_ENV2: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_secret_something }}
        CF_ENV_VAR_ENV3: '{"a": "b", "c": "d"}'
        CF_ENV_VAR_ENV4: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_another_secret }}
    - name: Check
      uses: docker://eu.gcr.io/halfpipe-io/cf-resource-v2:stable
      with:
        api: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_api-snpaas }}
        org: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_org-snpaas }}
        space: dev
        username: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_username-snpaas }}
        password: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_password-snpaas }}
        cli_version: cf7
        manifestPath: e2e/actions/deploy-cf/manifest.yml
        testDomain: springernature.app
        appPath: e2e/actions/deploy-cf/foo.html
        command: halfpipe-check
    - name: Promote
      uses: docker://eu.gcr.io/halfpipe-io/cf-resource-v2:stable
      with:
        api: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_api-snpaas }}
        org: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_org-snpaas }}
        space: dev
        username: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_username-snpaas }}
        password: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_password-snpaas }}
        cli_version: cf7
        manifestPath: e2e/actions/deploy-cf/manifest.yml
        testDomain: springernature.app
        appPath: e2e/actions/deploy-cf/foo.html
        command: halfpipe-promote
    - name: Summary
      run: |-
        echo ":rocket: **Deployment Successful**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "[SNPaaS Mission Control](https://mission-control.snpaas.eu/)" >> $GITHUB_STEP_SUMMARY
    - name: Cleanup
      if: always()
      uses: docker://eu.gcr.io/halfpipe-io/cf-resource-v2:stable
      with:
        api: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_api-snpaas }}
        org: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_org-snpaas }}
        space: dev
        username: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_username-snpaas }}
        password: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_password-snpaas }}
        cli_version: cf7
        manifestPath: e2e/actions/deploy-cf/manifest.yml
        testDomain: springernature.app
        appPath: e2e/actions/deploy-cf/foo.html
        command: halfpipe-cleanup
  deploy_to_cf_with_cf8:
    name: deploy to cf with cf8
    needs:
    - deploy_to_cf
    runs-on: ee-runner
    timeout-minutes: 60
    steps:
    - name: Vault secrets
      id: secrets
      uses: hashicorp/vault-action@v2.4.1
      with:
        url: https://vault.halfpipe.io
        method: approle
        roleId: ${{ env.VAULT_ROLE_ID }}
        secretId: ${{ env.VAULT_SECRET_ID }}
        exportEnv: false
        secrets: |
          /springernature/data/halfpipe-team/another secret | springernature_data_halfpipe-team_another_secret ;
          /springernature/data/halfpipe-team/cloudfoundry api-snpaas | springernature_data_halfpipe-team_cloudfoundry_api-snpaas ;
          /springernature/data/halfpipe-team/cloudfoundry org-snpaas | springernature_data_halfpipe-team_cloudfoundry_org-snpaas ;
          /springernature/data/halfpipe-team/cloudfoundry password-snpaas | springernature_data_halfpipe-team_cloudfoundry_password-snpaas ;
          /springernature/data/halfpipe-team/cloudfoundry username-snpaas | springernature_data_halfpipe-team_cloudfoundry_username-snpaas ;
          /springernature/data/halfpipe-team/secret something | springernature_data_halfpipe-team_secret_something ;
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        ssh-key: ${{ secrets.EE_GITHUB_PRIVATE_KEY }}
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: artifacts
    - name: Extract artifacts
      run: tar -xvf halfpipe-artifacts.tar; rm halfpipe-artifacts.tar
      working-directory: ${{ github.workspace }}
    - name: Push
      uses: docker://eu.gcr.io/halfpipe-io/cf-resource-v2:stable
      with:
        api: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_api-snpaas }}
        org: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_org-snpaas }}
        space: dev
        username: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_username-snpaas }}
        password: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_password-snpaas }}
        cli_version: cf8
        manifestPath: e2e/actions/deploy-cf/manifest.yml
        testDomain: springernature.app
        appPath: e2e/actions/deploy-cf/foo.html
        command: halfpipe-push
      env:
        CF_ENV_VAR_BUILD_URL: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
        CF_ENV_VAR_ENV1: "1234"
        CF_ENV_VAR_ENV2: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_secret_something }}
        CF_ENV_VAR_ENV3: '{"a": "b", "c": "d"}'
        CF_ENV_VAR_ENV4: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_another_secret }}
    - name: Check
      uses: docker://eu.gcr.io/halfpipe-io/cf-resource-v2:stable
      with:
        api: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_api-snpaas }}
        org: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_org-snpaas }}
        space: dev
        username: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_username-snpaas }}
        password: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_password-snpaas }}
        cli_version: cf8
        manifestPath: e2e/actions/deploy-cf/manifest.yml
        testDomain: springernature.app
        appPath: e2e/actions/deploy-cf/foo.html
        command: halfpipe-check
    - name: Promote
      uses: docker://eu.gcr.io/halfpipe-io/cf-resource-v2:stable
      with:
        api: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_api-snpaas }}
        org: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_org-snpaas }}
        space: dev
        username: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_username-snpaas }}
        password: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_password-snpaas }}
        cli_version: cf8
        manifestPath: e2e/actions/deploy-cf/manifest.yml
        testDomain: springernature.app
        appPath: e2e/actions/deploy-cf/foo.html
        command: halfpipe-promote
    - name: Summary
      run: |-
        echo ":rocket: **Deployment Successful**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "[SNPaaS Mission Control](https://mission-control.snpaas.eu/)" >> $GITHUB_STEP_SUMMARY
    - name: Cleanup
      if: always()
      uses: docker://eu.gcr.io/halfpipe-io/cf-resource-v2:stable
      with:
        api: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_api-snpaas }}
        org: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_org-snpaas }}
        space: dev
        username: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_username-snpaas }}
        password: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_password-snpaas }}
        cli_version: cf8
        manifestPath: e2e/actions/deploy-cf/manifest.yml
        testDomain: springernature.app
        appPath: e2e/actions/deploy-cf/foo.html
        command: halfpipe-cleanup
  deploy_to_cf_with_pre-promote:
    name: deploy to cf with pre-promote
    needs:
    - deploy_to_cf_with_cf8
    runs-on: ee-runner
    timeout-minutes: 60
    steps:
    - name: Vault secrets
      id: secrets
      uses: hashicorp/vault-action@v2.4.1
      with:
        url: https://vault.halfpipe.io
        method: approle
        roleId: ${{ env.VAULT_ROLE_ID }}
        secretId: ${{ env.VAULT_SECRET_ID }}
        exportEnv: false
        secrets: |
          /springernature/data/halfpipe-team/another secret | springernature_data_halfpipe-team_another_secret ;
          /springernature/data/halfpipe-team/cloudfoundry api-snpaas | springernature_data_halfpipe-team_cloudfoundry_api-snpaas ;
          /springernature/data/halfpipe-team/cloudfoundry org-snpaas | springernature_data_halfpipe-team_cloudfoundry_org-snpaas ;
          /springernature/data/halfpipe-team/cloudfoundry password-snpaas | springernature_data_halfpipe-team_cloudfoundry_password-snpaas ;
          /springernature/data/halfpipe-team/cloudfoundry username-snpaas | springernature_data_halfpipe-team_cloudfoundry_username-snpaas ;
          /springernature/data/halfpipe-team/secret something | springernature_data_halfpipe-team_secret_something ;
          /springernature/data/halfpipe-team/some secret | springernature_data_halfpipe-team_some_secret ;
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        ssh-key: ${{ secrets.EE_GITHUB_PRIVATE_KEY }}
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: artifacts
    - name: Extract artifacts
      run: tar -xvf halfpipe-artifacts.tar; rm halfpipe-artifacts.tar
      working-directory: ${{ github.workspace }}
    - name: Push
      uses: docker://eu.gcr.io/halfpipe-io/cf-resource-v2:stable
      with:
        api: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_api-snpaas }}
        org: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_org-snpaas }}
        space: dev
        username: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_username-snpaas }}
        password: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_password-snpaas }}
        cli_version: cf7
        manifestPath: e2e/actions/deploy-cf/manifest.yml
        testDomain: springernature.app
        appPath: e2e/actions/deploy-cf/foo.html
        command: halfpipe-push
      env:
        CF_ENV_VAR_BUILD_URL: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
        CF_ENV_VAR_ENV2: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_secret_something }}
        CF_ENV_VAR_ENV4: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_another_secret }}
    - name: Check
      uses: docker://eu.gcr.io/halfpipe-io/cf-resource-v2:stable
      with:
        api: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_api-snpaas }}
        org: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_org-snpaas }}
        space: dev
        username: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_username-snpaas }}
        password: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_password-snpaas }}
        cli_version: cf7
        manifestPath: e2e/actions/deploy-cf/manifest.yml
        testDomain: springernature.app
        appPath: e2e/actions/deploy-cf/foo.html
        command: halfpipe-check
    - name: run smoke-test.sh
      uses: docker://alpine
      with:
        entrypoint: /bin/sh
        args: -c "cd e2e/actions/deploy-cf; ./smoke-test.sh"
      env:
        ENV5: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_some_secret }}
        TEST_ROUTE: halfpipe-example-dev-CANDIDATE.springernature.app
    - name: docker-compose
      run: |-
        docker-compose -f docker-compose.yml pull
        docker-compose -f docker-compose.yml run \
          -e ARTIFACTORY_PASSWORD \
          -e ARTIFACTORY_URL \
          -e ARTIFACTORY_USERNAME \
          -e BUILD_VERSION \
          -e GIT_REVISION \
          -e RUNNING_IN_CI \
          -e TEST_ROUTE \
          -e VAULT_ROLE_ID \
          -e VAULT_SECRET_ID \
          -v /mnt/halfpipe-cache/:/var/halfpipe/shared-cache \
          app
      env:
        TEST_ROUTE: halfpipe-example-dev-CANDIDATE.springernature.app
    - name: Docker cleanup
      if: always()
      run: docker-compose -f docker-compose.yml down
    - name: CDCs
      run: |
        # write git key to file
        echo "${CONSUMER_GIT_KEY}" > .gitkey
        chmod 600 .gitkey

        set -ex

        # get current revision of consumer, revert to HEAD if not found
        REVISION=$(curl -fsSL "${CONSUMER_HOST}/internal/version" | jq -r '.revision' || echo "")
        if [ "${REVISION}" == "" ]; then
          echo "Error fetching version of consumer from ${CONSUMER_HOST}/internal/version - using HEAD instead."
          REVISION=HEAD
        fi

        # clone consumer into /scratch/consumer. dir may already exist when concourse restarts task
        rm -rf /scratch/consumer
        GIT_SSH_COMMAND="ssh -o StrictHostKeychecking=no -i .gitkey" git clone ${GIT_CLONE_OPTIONS} ${CONSUMER_GIT_URI} /scratch/consumer
        cd /scratch/consumer/${CONSUMER_PATH}

        # checkout revision
        git checkout ${REVISION}

        # run the tests with docker-compose
        # note: old system reads CF manifest env vars and sets them all here
        docker-compose pull ${DOCKER_COMPOSE_SERVICE:-code}
        docker-compose run --no-deps \
          --entrypoint "${CONSUMER_SCRIPT}" \
          -e DEPENDENCY_NAME=${PROVIDER_NAME} \
          -e ${PROVIDER_HOST_KEY}=${PROVIDER_HOST} \
          -e CDC_CONSUMER_NAME=${CONSUMER_NAME} \
          -e CDC_CONSUMER_VERSION=${REVISION} \
          -e CDC_PROVIDER_NAME=${PROVIDER_NAME} \
          -e CDC_PROVIDER_VERSION=${GIT_REVISION} \
          -e TEST_ROUTE \
           \
          ${DOCKER_COMPOSE_SERVICE:-code}
      env:
        CONSUMER_GIT_KEY: ${{ secrets.EE_GITHUB_PRIVATE_KEY }}
        CONSUMER_GIT_URI: git@github.com:springernature/repo
        CONSUMER_HOST: consumer.host
        CONSUMER_NAME: repo/app
        CONSUMER_PATH: app
        CONSUMER_SCRIPT: ci/run-external-and-cdcs-dev
        DOCKER_COMPOSE_SERVICE: ""
        GIT_CLONE_OPTIONS: ""
        PROVIDER_HOST: halfpipe-example-dev-CANDIDATE.springernature.app
        PROVIDER_HOST_KEY: PIPELINE_NAME_DEPLOYED_HOST
        PROVIDER_NAME: pipeline-name
        TEST_ROUTE: halfpipe-example-dev-CANDIDATE.springernature.app
    - name: Promote
      uses: docker://eu.gcr.io/halfpipe-io/cf-resource-v2:stable
      with:
        api: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_api-snpaas }}
        org: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_org-snpaas }}
        space: dev
        username: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_username-snpaas }}
        password: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_password-snpaas }}
        cli_version: cf7
        manifestPath: e2e/actions/deploy-cf/manifest.yml
        testDomain: springernature.app
        appPath: e2e/actions/deploy-cf/foo.html
        command: halfpipe-promote
    - name: Summary
      run: |-
        echo ":rocket: **Deployment Successful**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "[SNPaaS Mission Control](https://mission-control.snpaas.eu/)" >> $GITHUB_STEP_SUMMARY
    - name: Cleanup
      if: always()
      uses: docker://eu.gcr.io/halfpipe-io/cf-resource-v2:stable
      with:
        api: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_api-snpaas }}
        org: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_org-snpaas }}
        space: dev
        username: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_username-snpaas }}
        password: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_password-snpaas }}
        cli_version: cf7
        manifestPath: e2e/actions/deploy-cf/manifest.yml
        testDomain: springernature.app
        appPath: e2e/actions/deploy-cf/foo.html
        command: halfpipe-cleanup
  deploy_to_cf_with_docker_image:
    name: deploy to cf with docker image
    needs:
    - deploy_to_cf_with_pre-promote
    runs-on: ee-runner
    timeout-minutes: 60
    steps:
    - name: Vault secrets
      id: secrets
      uses: hashicorp/vault-action@v2.4.1
      with:
        url: https://vault.halfpipe.io
        method: approle
        roleId: ${{ env.VAULT_ROLE_ID }}
        secretId: ${{ env.VAULT_SECRET_ID }}
        exportEnv: false
        secrets: |
          /springernature/data/halfpipe-team/cloudfoundry api-snpaas | springernature_data_halfpipe-team_cloudfoundry_api-snpaas ;
          /springernature/data/halfpipe-team/cloudfoundry org-snpaas | springernature_data_halfpipe-team_cloudfoundry_org-snpaas ;
          /springernature/data/halfpipe-team/cloudfoundry password-snpaas | springernature_data_halfpipe-team_cloudfoundry_password-snpaas ;
          /springernature/data/halfpipe-team/cloudfoundry username-snpaas | springernature_data_halfpipe-team_cloudfoundry_username-snpaas ;
          /springernature/data/shared/halfpipe-gcr private_key_base64 | springernature_data_shared_halfpipe-gcr_private_key_base64 ;
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive
        ssh-key: ${{ secrets.EE_GITHUB_PRIVATE_KEY }}
    - name: Push
      uses: docker://eu.gcr.io/halfpipe-io/cf-resource-v2:stable
      with:
        api: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_api-snpaas }}
        org: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_org-snpaas }}
        space: dev
        username: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_username-snpaas }}
        password: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_password-snpaas }}
        cli_version: cf7
        manifestPath: e2e/actions/deploy-cf/manifest-docker.yml
        testDomain: springernature.app
        appPath: e2e/actions/deploy-cf
        command: halfpipe-push
        dockerUsername: _json_key
        dockerPassword: ${{ steps.secrets.outputs.springernature_data_shared_halfpipe-gcr_private_key_base64 }}
        dockerTag: ${{ env.BUILD_VERSION }}
      env:
        CF_ENV_VAR_BUILD_URL: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
    - name: Check
      uses: docker://eu.gcr.io/halfpipe-io/cf-resource-v2:stable
      with:
        api: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_api-snpaas }}
        org: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_org-snpaas }}
        space: dev
        username: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_username-snpaas }}
        password: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_password-snpaas }}
        cli_version: cf7
        manifestPath: e2e/actions/deploy-cf/manifest-docker.yml
        testDomain: springernature.app
        appPath: e2e/actions/deploy-cf
        command: halfpipe-check
    - name: Promote
      uses: docker://eu.gcr.io/halfpipe-io/cf-resource-v2:stable
      with:
        api: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_api-snpaas }}
        org: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_org-snpaas }}
        space: dev
        username: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_username-snpaas }}
        password: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_password-snpaas }}
        cli_version: cf7
        manifestPath: e2e/actions/deploy-cf/manifest-docker.yml
        testDomain: springernature.app
        appPath: e2e/actions/deploy-cf
        command: halfpipe-promote
    - name: Summary
      run: |-
        echo ":rocket: **Deployment Successful**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "[SNPaaS Mission Control](https://mission-control.snpaas.eu/)" >> $GITHUB_STEP_SUMMARY
    - name: Cleanup
      if: always()
      uses: docker://eu.gcr.io/halfpipe-io/cf-resource-v2:stable
      with:
        api: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_api-snpaas }}
        org: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_org-snpaas }}
        space: dev
        username: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_username-snpaas }}
        password: ${{ steps.secrets.outputs.springernature_data_halfpipe-team_cloudfoundry_password-snpaas }}
        cli_version: cf7
        manifestPath: e2e/actions/deploy-cf/manifest-docker.yml
        testDomain: springernature.app
        appPath: e2e/actions/deploy-cf
        command: halfpipe-cleanup
