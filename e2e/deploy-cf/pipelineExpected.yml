# Generated using halfpipe cli version 0.0.0-DEV
jobs:
- build_log_retention:
    minimum_succeeded_builds: 1
  ensure:
    attempts: 2
    params:
      cliVersion: cf7
      command: halfpipe-cleanup
      manifestPath: git/e2e/deploy-cf/manifest.yml
      timeout: 5m
    put: halfpipe-cleanup
    resource: cf-dev-api-halfpipe-team-dev
    timeout: 5m
  name: deploy to cf without any jazz
  plan:
  - get: git
    trigger: true
  - params:
      appPath: git/e2e/deploy-cf
      cliVersion: cf7
      command: halfpipe-push
      gitRefPath: git/.git/ref
      manifestPath: git/e2e/deploy-cf/manifest.yml
      testDomain: some.random.domain.com
      timeout: 5m
    put: halfpipe-push
    resource: cf-dev-api-halfpipe-team-dev
  - params:
      cliVersion: cf7
      command: halfpipe-check
      manifestPath: git/e2e/deploy-cf/manifest.yml
      timeout: 5m
    put: halfpipe-check
    resource: cf-dev-api-halfpipe-team-dev
  - params:
      cliVersion: cf7
      command: halfpipe-promote
      manifestPath: git/e2e/deploy-cf/manifest.yml
      testDomain: some.random.domain.com
      timeout: 5m
    put: halfpipe-promote
    resource: cf-dev-api-halfpipe-team-dev
  serial: true
- build_log_retention:
    minimum_succeeded_builds: 1
  ensure:
    attempts: 2
    params:
      cliVersion: cf6
      command: halfpipe-cleanup
      manifestPath: git/e2e/deploy-cf/manifest.yml
      timeout: 5m
    put: halfpipe-cleanup
    resource: cf-dev-api-halfpipe-team-dev
    timeout: 5m
  name: deploy to cf
  plan:
  - get: git
    passed:
    - deploy to cf without any jazz
    trigger: true
  - params:
      appPath: git/e2e/deploy-cf
      cliVersion: cf6
      command: halfpipe-push
      gitRefPath: git/.git/ref
      manifestPath: git/e2e/deploy-cf/manifest.yml
      preStartCommand: cf apps; cf events myapp-CANDIDATE
      testDomain: some.random.domain.com
      timeout: 5m
    put: halfpipe-push
    resource: cf-dev-api-halfpipe-team-dev
  - params:
      cliVersion: cf6
      command: halfpipe-check
      manifestPath: git/e2e/deploy-cf/manifest.yml
      timeout: 5m
    put: halfpipe-check
    resource: cf-dev-api-halfpipe-team-dev
  - attempts: 1
    config:
      caches:
      - path: ../../../var/halfpipe/cache
      - path: ../../../halfpipe-cache
      image_resource:
        source:
          password: ((halfpipe-gcr.private_key))
          repository: eu.gcr.io/halfpipe-io/halfpipe-fly
          tag: latest
          username: _json_key
        type: registry-image
      inputs:
      - name: git
      params:
        A: blah
        ARTIFACTORY_PASSWORD: ((artifactory.password))
        ARTIFACTORY_URL: ((artifactory.url))
        ARTIFACTORY_USERNAME: ((artifactory.username))
        TEST_ROUTE: halfpipe-example-kotlin-dev-dev-CANDIDATE.some.random.domain.com
      platform: linux
      run:
        args:
        - -c
        - |
          if ! which bash > /dev/null && [ "$SUPPRESS_BASH_WARNING" != "true" ]; then
            echo "WARNING: Bash is not present in the docker image"
            echo "If your script depends on bash you will get a strange error message like:"
            echo "  sh: yourscript.sh: command not found"
            echo "To fix, make sure your docker image contains bash!"
            echo "Or if you are sure you don't need bash you can suppress this warning by setting the environment variable \"SUPPRESS_BASH_WARNING\" to \"true\"."
            echo ""
            echo ""
          fi

          if [ -e /etc/alpine-release ]
          then
            echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
            echo "There is a known issue where DNS resolving does not work as expected"
            echo "https://github.com/gliderlabs/docker-alpine/issues/255"
            echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
            echo "we recommend debian:buster-slim as an alternative"
            echo ""
            echo ""
          fi

          export GIT_REVISION=`cat ../../.git/ref`

          ./smoke-test.sh
          EXIT_STATUS=$?
          if [ $EXIT_STATUS != 0 ] ; then
            exit 1
          fi
        dir: git/e2e/deploy-cf
        path: /bin/sh
    task: pre-promote-step
    timeout: 1h
  - params:
      cliVersion: cf6
      command: halfpipe-promote
      manifestPath: git/e2e/deploy-cf/manifest.yml
      testDomain: some.random.domain.com
      timeout: 5m
    put: halfpipe-promote
    resource: cf-dev-api-halfpipe-team-dev
  serial: true
resource_types:
- name: cf-resource
  source:
    password: ((halfpipe-gcr.private_key))
    repository: eu.gcr.io/halfpipe-io/cf-resource-v2
    tag: stable
    username: _json_key
  type: registry-image
resources:
- check_every: 10m
  name: git
  source:
    branch: ""
    paths:
    - e2e/deploy-cf
    private_key: ((halfpipe-github.private_key))
    uri: git@github.com:springernature/halfpipe.git
  type: git
- check_every: 24h
  name: cf-dev-api-halfpipe-team-dev
  source:
    api: dev-api
    org: halfpipe-team
    password: very-secret
    space: dev
    username: michiel
  type: cf-resource

