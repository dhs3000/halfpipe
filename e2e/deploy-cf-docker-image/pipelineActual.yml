# Generated using halfpipe cli version 0.0.0-DEV
jobs:
- build_log_retention:
    minimum_succeeded_builds: 1
  name: update
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - attempts: 2
        get: git
        trigger: true
    timeout: 1h
  - attempts: 2
    config:
      image_resource:
        source:
          password: ((halfpipe-gcr.private_key))
          repository: eu.gcr.io/halfpipe-io/halfpipe-auto-update
          tag: latest
          username: _json_key
        type: registry-image
      inputs:
      - name: git
      params:
        CONCOURSE_PASSWORD: ((concourse.password))
        CONCOURSE_TEAM: ((concourse.team))
        CONCOURSE_URL: ((concourse.url))
        CONCOURSE_USERNAME: ((concourse.username))
        HALFPIPE_DOMAIN: halfpipe.io
        HALFPIPE_PROJECT: halfpipe-io
        PIPELINE_NAME: halfpipe-e2e-deploy-cf-docker-image-6_5_1
      platform: linux
      run:
        dir: git/e2e/deploy-cf-docker-image
        path: update-pipeline
    task: update
    timeout: 1h
  - attempts: 2
    params:
      bump: minor
    put: version
    timeout: 1h
  serial: true
- build_log_retention:
    minimum_succeeded_builds: 1
  ensure:
    attempts: 2
    params:
      cliVersion: cf6
      command: halfpipe-cleanup
      manifestPath: git/e2e/deploy-cf-docker-image/manifest.yml
      timeout: 1h
    put: halfpipe-cleanup
    resource: cf-snpaas-dev
    timeout: 1h
  name: deploy to cf simple
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - attempts: 2
        get: git
        passed:
        - update
      - attempts: 2
        get: version
        passed:
        - update
        timeout: 1m
        trigger: true
    timeout: 1h
  - attempts: 2
    params:
      buildVersionPath: version/version
      cliVersion: cf6
      command: halfpipe-push
      dockerPassword: ((halfpipe-gcr.private_key))
      dockerUsername: _json_key
      gitRefPath: git/.git/ref
      manifestPath: git/e2e/deploy-cf-docker-image/manifest.yml
      testDomain: springernature.app
      timeout: 1h
    put: halfpipe-push
    resource: cf-snpaas-dev
    timeout: 1h
  - attempts: 2
    params:
      cliVersion: cf6
      command: halfpipe-check
      manifestPath: git/e2e/deploy-cf-docker-image/manifest.yml
      timeout: 1h
    put: halfpipe-check
    resource: cf-snpaas-dev
    timeout: 1h
  - attempts: 2
    params:
      cliVersion: cf6
      command: halfpipe-promote
      manifestPath: git/e2e/deploy-cf-docker-image/manifest.yml
      testDomain: springernature.app
      timeout: 1h
    put: halfpipe-promote
    resource: cf-snpaas-dev
    timeout: 1h
  serial: true
- build_log_retention:
    minimum_succeeded_builds: 1
  ensure:
    attempts: 2
    params:
      cliVersion: cf6
      command: halfpipe-cleanup
      manifestPath: git/e2e/deploy-cf-docker-image/manifest.yml
      timeout: 1h
    put: halfpipe-cleanup
    resource: cf-snpaas-dev
    timeout: 1h
  name: deploy to cf with pre promote
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - attempts: 2
        get: git
        passed:
        - deploy to cf simple
      - attempts: 2
        get: version
        passed:
        - deploy to cf simple
        timeout: 1m
        trigger: true
    timeout: 1h
  - attempts: 2
    params:
      buildVersionPath: version/version
      cliVersion: cf6
      command: halfpipe-push
      dockerPassword: ((halfpipe-gcr.private_key))
      dockerTag: git/.git/ref
      dockerUsername: _json_key
      gitRefPath: git/.git/ref
      manifestPath: git/e2e/deploy-cf-docker-image/manifest.yml
      testDomain: springernature.app
      timeout: 1h
    put: halfpipe-push
    resource: cf-snpaas-dev
    timeout: 1h
  - attempts: 2
    params:
      cliVersion: cf6
      command: halfpipe-check
      manifestPath: git/e2e/deploy-cf-docker-image/manifest.yml
      timeout: 1h
    put: halfpipe-check
    resource: cf-snpaas-dev
    timeout: 1h
  - in_parallel:
      fail_fast: true
      steps:
      - do:
        - attempts: 1
          config:
            caches:
            - path: ../../../var/halfpipe/cache
            - path: ../../../halfpipe-cache
            image_resource:
              source:
                password: ((halfpipe-gcr.private_key))
                repository: eu.gcr.io/halfpipe-io/halfpipe-fly
                tag: latest
                username: _json_key
              type: registry-image
            inputs:
            - name: git
            - name: version
            params:
              A: blah
              ARTIFACTORY_PASSWORD: ((artifactory.password))
              ARTIFACTORY_URL: ((artifactory.url))
              ARTIFACTORY_USERNAME: ((artifactory.username))
              TEST_ROUTE: halfpipe-example-kotlin-dev-dev-CANDIDATE.springernature.app
            platform: linux
            run:
              args:
              - -c
              - |
                if ! which bash > /dev/null && [ "$SUPPRESS_BASH_WARNING" != "true" ]; then
                  echo "WARNING: Bash is not present in the docker image"
                  echo "If your script depends on bash you will get a strange error message like:"
                  echo "  sh: yourscript.sh: command not found"
                  echo "To fix, make sure your docker image contains bash!"
                  echo "Or if you are sure you don't need bash you can suppress this warning by setting the environment variable \"SUPPRESS_BASH_WARNING\" to \"true\"."
                  echo ""
                  echo ""
                fi

                if [ -e /etc/alpine-release ]
                then
                  echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
                  echo "There is a known issue where DNS resolving does not work as expected"
                  echo "https://github.com/gliderlabs/docker-alpine/issues/255"
                  echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
                  echo "we recommend debian:buster-slim as an alternative"
                  echo ""
                  echo ""
                fi

                export GIT_REVISION=`cat ../../.git/ref`
                export BUILD_VERSION=`cat ../../../version/version`

                ./smoke-test.sh
                EXIT_STATUS=$?
                if [ $EXIT_STATUS != 0 ] ; then
                  exit 1
                fi
              dir: git/e2e/deploy-cf-docker-image
              path: /bin/sh
          task: pre-promote-step
          timeout: 1h
    timeout: 1h
  - attempts: 2
    params:
      cliVersion: cf6
      command: halfpipe-promote
      manifestPath: git/e2e/deploy-cf-docker-image/manifest.yml
      testDomain: springernature.app
      timeout: 1h
    put: halfpipe-promote
    resource: cf-snpaas-dev
    timeout: 1h
  serial: true
- build_log_retention:
    minimum_succeeded_builds: 1
  name: deploy to cf simple - rolling deploy
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - attempts: 2
        get: git
        passed:
        - deploy to cf with pre promote
      - attempts: 2
        get: version
        passed:
        - deploy to cf with pre promote
        timeout: 1m
        trigger: true
    timeout: 1h
  - attempts: 2
    params:
      buildVersionPath: version/version
      cliVersion: cf7
      command: halfpipe-rolling-deploy
      dockerPassword: ((halfpipe-gcr.private_key))
      dockerTag: version/version
      dockerUsername: _json_key
      gitRefPath: git/.git/ref
      manifestPath: git/e2e/deploy-cf-docker-image/manifest.yml
      timeout: 1h
    put: rolling-deploy
    resource: rolling-cf-snpaas-dev
    timeout: 1h
  serial: true
- build_log_retention:
    minimum_succeeded_builds: 1
  name: deploy to cf with pre promote - rolling deploy
  plan:
  - in_parallel:
      fail_fast: true
      steps:
      - attempts: 2
        get: git
        passed:
        - deploy to cf simple - rolling deploy
      - attempts: 2
        get: version
        passed:
        - deploy to cf simple - rolling deploy
        timeout: 1m
        trigger: true
    timeout: 1h
  - attempts: 2
    params:
      buildVersionPath: version/version
      cliVersion: cf6
      command: halfpipe-push
      dockerPassword: ((halfpipe-gcr.private_key))
      dockerTag: git/.git/ref
      dockerUsername: _json_key
      gitRefPath: git/.git/ref
      instances: 1
      manifestPath: git/e2e/deploy-cf-docker-image/manifest.yml
      testDomain: springernature.app
      timeout: 1h
    put: deploy-test-app
    resource: rolling-cf-snpaas-dev
    timeout: 1h
  - in_parallel:
      fail_fast: true
      steps:
      - do:
        - attempts: 1
          config:
            caches:
            - path: ../../../var/halfpipe/cache
            - path: ../../../halfpipe-cache
            image_resource:
              source:
                password: ((halfpipe-gcr.private_key))
                repository: eu.gcr.io/halfpipe-io/halfpipe-fly
                tag: latest
                username: _json_key
              type: registry-image
            inputs:
            - name: git
            - name: version
            params:
              A: blah
              ARTIFACTORY_PASSWORD: ((artifactory.password))
              ARTIFACTORY_URL: ((artifactory.url))
              ARTIFACTORY_USERNAME: ((artifactory.username))
              TEST_ROUTE: halfpipe-example-kotlin-dev-dev-CANDIDATE.springernature.app
            platform: linux
            run:
              args:
              - -c
              - |
                if ! which bash > /dev/null && [ "$SUPPRESS_BASH_WARNING" != "true" ]; then
                  echo "WARNING: Bash is not present in the docker image"
                  echo "If your script depends on bash you will get a strange error message like:"
                  echo "  sh: yourscript.sh: command not found"
                  echo "To fix, make sure your docker image contains bash!"
                  echo "Or if you are sure you don't need bash you can suppress this warning by setting the environment variable \"SUPPRESS_BASH_WARNING\" to \"true\"."
                  echo ""
                  echo ""
                fi

                if [ -e /etc/alpine-release ]
                then
                  echo "WARNING: you are running your build in a Alpine image or one that is based on the Alpine"
                  echo "There is a known issue where DNS resolving does not work as expected"
                  echo "https://github.com/gliderlabs/docker-alpine/issues/255"
                  echo "If you see any errors related to resolving hostnames the best course of action is to switch to another image"
                  echo "we recommend debian:buster-slim as an alternative"
                  echo ""
                  echo ""
                fi

                export GIT_REVISION=`cat ../../.git/ref`
                export BUILD_VERSION=`cat ../../../version/version`

                ./smoke-test.sh
                EXIT_STATUS=$?
                if [ $EXIT_STATUS != 0 ] ; then
                  exit 1
                fi
              dir: git/e2e/deploy-cf-docker-image
              path: /bin/sh
          task: pre-promote-step
          timeout: 1h
    timeout: 1h
  - attempts: 2
    params:
      buildVersionPath: version/version
      cliVersion: cf7
      command: halfpipe-rolling-deploy
      dockerPassword: ((halfpipe-gcr.private_key))
      dockerTag: git/.git/ref
      dockerUsername: _json_key
      gitRefPath: git/.git/ref
      manifestPath: git/e2e/deploy-cf-docker-image/manifest.yml
      timeout: 1h
    put: rolling-deploy
    resource: rolling-cf-snpaas-dev
    timeout: 1h
  - attempts: 2
    params:
      command: halfpipe-delete-test
      manifestPath: git/e2e/deploy-cf-docker-image/manifest.yml
    put: remove-test-app
    resource: rolling-cf-snpaas-dev
    timeout: 1h
  serial: true
resource_types:
- name: cf-resource
  source:
    password: ((halfpipe-gcr.private_key))
    repository: eu.gcr.io/halfpipe-io/cf-resource-v2
    tag: stable
    username: _json_key
  type: registry-image
resources:
- check_every: 10m
  name: git
  source:
    branch: 6.5.1
    paths:
    - e2e/deploy-cf-docker-image
    private_key: ((halfpipe-github.private_key))
    uri: git@github.com:springernature/halfpipe.git
  type: git
- name: version
  source:
    bucket: ((halfpipe-semver.bucket))
    driver: gcs
    json_key: ((halfpipe-semver.private_key))
    key: halfpipe-team-halfpipe-e2e-deploy-cf-docker-image-6.5.1
  type: semver
- check_every: 24h
  name: cf-snpaas-dev
  source:
    api: ((cloudfoundry.api-snpaas))
    org: ((cloudfoundry.org-snpaas))
    password: ((cloudfoundry.password-snpaas))
    space: dev
    username: ((cloudfoundry.username-snpaas))
  type: cf-resource
- check_every: 24h
  name: rolling-cf-snpaas-dev
  source:
    api: ((cloudfoundry.api-snpaas))
    org: ((cloudfoundry.org-snpaas))
    password: ((cloudfoundry.password-snpaas))
    space: dev
    username: ((cloudfoundry.username-snpaas))
  type: cf-resource

