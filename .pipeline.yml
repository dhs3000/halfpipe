groups: []
resources:
- name: artifactory-linux
  type: artifactory
  check_every: 24h
  source:
    endpoint: https://springernature.jfrog.io/springernature
    password: ((artifactory.password))
    regex: halfpipe_linux_(?<version>.*)
    repository: /halfpipe
    username: ((artifactory.username))
- name: halfpipe
  type: git
  check_every: 10m
  source:
    branch: main
    private_key: ((halfpipe-github.private_key))
    uri: git@github.com:springernature/halfpipe.git
- name: version
  type: semver
  check_every: 24h
  source:
    branch: version
    driver: git
    file: version
    private_key: ((halfpipe-github.private_key))
    uri: git@github.com:springernature/halfpipe.git
- name: artifactory-darwin
  type: artifactory
  check_every: 24h
  source:
    endpoint: https://springernature.jfrog.io/springernature
    password: ((artifactory.password))
    regex: halfpipe_darwin_(?<version>.*)
    repository: /halfpipe
    username: ((artifactory.username))
- name: artifactory-windows
  type: artifactory
  check_every: 24h
  source:
    endpoint: https://springernature.jfrog.io/springernature
    password: ((artifactory.password))
    regex: halfpipe_windows_(?<version>.*).exe
    repository: /halfpipe
    username: ((artifactory.username))
- name: release
  type: github-release-latest
  source:
    access_token: ((github-halfpipe-io-user.repo_pat))
    owner: springernature
    repository: halfpipe
resource_types:
- name: artifactory
  type: docker-image
  check_every: 24h
  source:
    repository: pivotalservices/artifactory-resource
- name: github-release-latest
  type: registry-image
  source:
    repository: concourse/github-release-resource
jobs:
- name: Test
  serial: true
  plan:
  - get: halfpipe
    trigger: true
  - task: Test
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: golang
          tag: 1.17-buster
      run:
        path: /bin/bash
        args:
        - -ec
        - |
          export GOMODCACHE=/var/halfpipe/cache/gomodcache
          export HALFPIPE_SKIP_COVERAGE_TESTS=true
          cd halfpipe
          ./build.sh ci
      inputs:
      - name: halfpipe
      caches:
      - path: ../../../var/halfpipe/cache

- name: Bump Major
  plan:
  - put: version
    params:
      bump: major
- name: Bump Minor
  plan:
  - put: version
    params:
      bump: minor
- name: Bump Patch
  plan:
  - put: version
    params:
      bump: patch
- name: Release
  disable_manual_trigger: true
  plan:
  - in_parallel:
    - get: halfpipe
      passed:
      - Test
    - get: version
      trigger: true
  - task: Build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: golang
          tag: 1.17-buster
      run:
        path: /bin/sh
        args:
        - -ec
        - |
          export ROOT=`pwd`
          export GOMODCACHE=/var/halfpipe/cache/gomodcache
          export VERSION="$(cat version/version)"
          export CONF_PKG="github.com/springernature/halfpipe/config"
          export LDFLAGS="-X ${CONF_PKG}.Version=${VERSION}"
          export CGO_ENABLED=0
          export GOARCH=amd64

          # Build binaries
          cd halfpipe
          GOOS=darwin go build -o halfpipe_darwin_$VERSION -ldflags "${LDFLAGS}" cmd/halfpipe.go
          GOOS=linux go build -o halfpipe_linux_$VERSION -ldflags "${LDFLAGS}" cmd/halfpipe.go
          GOOS=windows go build -o halfpipe_windows_unsigned_$VERSION.exe -ldflags "${LDFLAGS}" cmd/halfpipe.go

          cp halfpipe_darwin_$VERSION halfpipe_linux_$VERSION halfpipe_windows_unsigned_$VERSION.exe $ROOT/binaries
      inputs:
      - name: halfpipe
      - name: version
      outputs:
      - name: binaries
      caches:
      - path: ../../../var/halfpipe/cache
  - task: Sign
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: quay.io/giantswarm/signcode-util
          tag: latest
      run:
        path: /bin/sh
        args:
          - -ec
          - |
            export VERSION="$(cat version/version)"
            echo $SIGN_KEY | base64 -d > key.pfx
            echo $WTF
            osslsigncode sign \
              -pkcs12 key.pfx \
              -pass $SIGN_KEY_PWD \
              -n "halfpipe" \
              -i https://www.springernature.com/ \
              -t http://timestamp.digicert.com \
              -in binaries/halfpipe_windows_unsigned_$VERSION.exe \
              -out binaries/halfpipe_windows_$VERSION.exe
            chmod +x binaries/halfpipe_windows_$VERSION.exe
            rm binaries/halfpipe_windows_unsigned_$VERSION.exe
            ls -al binaries
      inputs:
        - name: halfpipe
        - name: version
        - name: binaries
      outputs:
        - name: binaries
      params:
        SIGN_KEY: ((halfpipe-cli.sign_key))
        SIGN_KEY_PWD: ((halfpipe-cli.sign_key_pwd))
        WTF: ((halfpipe-cli.whats-this))
  - put: halfpipe
    params:
      repository: halfpipe
      tag: version/version
  - put: release
    params:
      globs:
      - binaries/halfpipe_*
      name: version/version
      tag: version/version
  - put: artifactory-darwin
    params:
      file: binaries/halfpipe_darwin_*
  - put: artifactory-linux
    params:
      file: binaries/halfpipe_linux_*
  - put: artifactory-windows
    params:
      file: binaries/halfpipe_windows_*
